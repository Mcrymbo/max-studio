version: "3.9"

services:
  # Database
  postgres:
    image: postgres:15
    container_name: maxstudio_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-maxstudio}
      POSTGRES_USER: ${POSTGRES_USER:-maxstudio}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-maxstudio}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432" # bind to host only if you need external access
    networks:
      - internal

  # Jellyfin Media Server
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: maxstudio_jellyfin
    restart: unless-stopped
    environment:
      TZ: UTC
    volumes:
      - jellyfin_config:/config
      - jellyfin_cache:/cache
      - jellyfin_library:/media
    ports:
      - "8096:8096" # accessible externally, can also proxy via nginx
    depends_on:
      - postgres
    networks:
      - internal

  # Backend (Django / FastAPI / etc.)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: maxstudio_backend
    restart: unless-stopped
    environment:
      DEBUG: "false"
      SECRET_KEY: ${SECRET_KEY:-change-me}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1,backend}
      POSTGRES_DB: ${POSTGRES_DB:-maxstudio}
      POSTGRES_USER: ${POSTGRES_USER:-maxstudio}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-maxstudio}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      JELLYFIN_URL: http://jellyfin:8096
      JELLYFIN_API_KEY: ${JELLYFIN_API_KEY:-}
      JELLYFIN_USER_ID: ${JELLYFIN_USER_ID:-}
      JELLYFIN_LIBRARY_PATH: /app/media/jellyfin_library
      SIGNED_URL_SECRET: ${SIGNED_URL_SECRET:-change-me}
      CORS_ALLOW_ALL_ORIGINS: "true"
    volumes:
      - backend_media:/app/media
      - jellyfin_library:/app/media/jellyfin_library
    expose:
      - "8000" # internal only, nginx will proxy
    depends_on:
      - postgres
      - jellyfin
    networks:
      - internal

  # Frontend (Next.js / React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: maxstudio_frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_GRAPHQL_URL: http://backend:8000/graphql/
      NEXT_PUBLIC_BACKEND_ORIGIN: http://backend:8000
    expose:
      - "3000" # internal only, nginx will proxy
    depends_on:
      - backend
    networks:
      - internal

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: maxstudio_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - internal

  # Mobile build helper (runs manually with --profile build)
  mobile_build:
    image: ghcr.io/cirruslabs/flutter:stable
    container_name: maxstudio_mobile_build
    working_dir: /app
    command: >
      sh -c "
        flutter pub get &&
        flutter build apk --release &&
        flutter build ios --release --no-codesign
      "
    volumes:
      - ./mobile:/app
      - mobile_build_cache:/root/.pub-cache
    profiles:
      - build
    networks:
      - internal

# Persistent volumes
volumes:
  postgres_data:
  jellyfin_config:
  jellyfin_cache:
  jellyfin_library:
  backend_media:
  mobile_build_cache:

# Networks
networks:
  internal:
    driver: bridge
